apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: {{ .Values.namespace | default .Release.Namespace }}
spec:
  serviceName: rabbitmq
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels: { app: rabbitmq }
  template:
    metadata:
      labels: { app: rabbitmq }
    spec:
      containers:
        - name: rabbitmq
          image: {{ .Values.image }}
          env:
            - name: RABBITMQ_DEFAULT_USER
              valueFrom: { secretKeyRef: { name: rabbitmq-auth, key: username } }
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom: { secretKeyRef: { name: rabbitmq-auth, key: password } }
          ports:
            - containerPort: {{ .Values.service.amqpPort }}
            - containerPort: {{ .Values.service.httpPort }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/rabbitmq
          resources:
{{ toYaml .Values.resources | indent 12 }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        storageClassName: {{ .Values.persistence.storageClass }}
        accessModes: {{ toYaml .Values.persistence.accessModes | nindent 8 }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
