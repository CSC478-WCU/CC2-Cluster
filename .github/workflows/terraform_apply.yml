name: Terraform Apply Cloudlab

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to deploy"
        required: true
        default: "main"
      ssh_user:
        description: "SSH user on nodes (CL username)"
        required: true
        default: "tg996676"
      num_workers:
        description: "Number of worker nodes instantiated"
        required: true
        type: number
        default: 2
      aggregate:
        description: "Select CloudLab aggregate"
        required: true
        type: choice
        options:
          - "emulab.net"
          - "utah.cloudlab.us"
          - "clemson.cloudlab.us"
          - "wisc.cloudlab.us"
          - "apt.emulab.net"
        default: "emulab.net"
      hardware_type:
        description: "Select hardware type"
        required: true
        type: choice
        options:
          # APT
          - "c6220"
          - "r320"
          - "r720"
          # Clemson
          - "c4130"
          - "c6320"
          - "c6420"
          - "c8220"
          - "c8220x"
          - "dss7500"
          - "ibm8335"
          - "nvidiagh"
          - "r650"
          - "r6525"
          - "r6615"
          - "r7525"
          # Emulab
          - "d430"
          - "d710"
          - "d820"
          - "dl360"
          - "pc3000"
          - "sxmep"
          - "vmpru-b48"
          # Mass
          - "rs440"
          - "rs620"
          - "rs630"
          # Utah
          - "c6525-100g"
          - "c6525-25g"
          - "c6620"
          - "d2950"
          - "d6515"
          - "dell-s4048"
          - "dl360"
          - "flex01"
          - "flex02"
          - "flex03"
          - "flex04"
          - "flex05"
          - "flex06"
          - "flex07"
          - "flex08"
          - "flex09"
          - "flex10"
          - "flex11"
          - "flex12"
          - "flex13"
          - "flex14"
          - "flex15"
          - "flex16"
          - "m400"
          - "m510"
          - "mlnx-sn2410"
          - "r660-fw"
          - "r720"
          - "r760-storage"
          - "xl170"
          # Wisconsin
          - "c220g1"
          - "c220g2"
          - "c220g5"
          - "c240g1"
          - "c240g2"
          - "c240g5"
          - "c4130"
          - "d7525"
          - "d8545"
          - "sm110p"
          - "sm220u"
        default: "d710"

jobs:
  terraform:
    runs-on: ubuntu-latest
    outputs:
      nodes_json: ${{ steps.collect.outputs.nodes_json }}
      url: ${{ steps.collect.outputs.url }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: Create SSH key from secret
        working-directory: ./infra
        run: |
          set -euo pipefail
          echo "${CLOUDLAB_PEM_B64}" | base64 -d > cloudlab_decrypted.pem
          chmod 600 cloudlab_decrypted.pem
          head -n1 cloudlab_decrypted.pem | grep -q -- 'BEGIN' || { echo "PEM decode failed"; exit 1; }
        env:
          CLOUDLAB_PEM_B64: ${{ secrets.CLOUDLAB_PEM_B64 }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.2
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: ./infra
        run: terraform init

      - name: Terraform Apply
        working-directory: ./infra
        run: |
          terraform apply -auto-approve \
            -var="aggregate=${{ inputs.aggregate }}" \
            -var="hardware_type=${{ inputs.hardware_type }}" \
            -var="num_workers=${{ inputs.num_workers }}"

      - name: Show outputs (human)
        working-directory: ./infra
        run: terraform output

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
      - name: Collect outputs for Ansible
        id: collect
        working-directory: ./infra
        shell: bash
        run: |
          set -euo pipefail
          tf_json="$(terraform output -json)"           # pure JSON, no color
          echo "$tf_json" | jq -e '.' >/dev/null        # sanity check
          nodes_json="$(echo "$tf_json" | jq -c '.nodes.value')"
          {
            echo "nodes_json<<EOF"
            echo "$nodes_json"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"
          echo "nodes_json=$nodes_json"

  ansible:
    needs: terraform
    uses: ./.github/workflows/ansible-deploy.yml
    with:
      nodes_json: ${{ needs.terraform.outputs.nodes_json }}
      ssh_user: ${{ inputs.ssh_user }}
      branch: ${{ inputs.branch }}
    secrets:
      CLOUDLAB_PEM_B64: ${{ secrets.CLOUDLAB_PEM_B64 }}
      ANSIBLE_VAULT_PASSWORD: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
