name: Terraform Apply Cloudlab

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to deploy"
        required: true
        default: "main"
      ssh_user:
        description: "SSH user on nodes (CL username)"
        required: true
        default: "tg996676"

jobs:
  terraform:
    runs-on: ubuntu-latest
    outputs:
      nodes_json: ${{ steps.collect.outputs.nodes_json }}
      url: ${{ steps.collect.outputs.url }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: Create SSH key from secret
        working-directory: ./infra
        run: |
          set -euo pipefail
          echo "${CLOUDLAB_PEM_B64}" | base64 -d > cloudlab_decrypted.pem
          chmod 600 cloudlab_decrypted.pem
          head -n1 cloudlab_decrypted.pem | grep -q -- 'BEGIN' || { echo "PEM decode failed"; exit 1; }
        env:
          CLOUDLAB_PEM_B64: ${{ secrets.CLOUDLAB_PEM_B64 }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.2

      - name: Terraform Init
        working-directory: ./infra
        run: terraform init

      - name: Terraform Apply
        working-directory: ./infra
        run: terraform apply -auto-approve

      - name: Show outputs (human)
        working-directory: ./infra
        run: terraform output -json

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
      - name: Collect outputs for Ansible
        id: collect
        working-directory: ./infra
        shell: bash
        run: |
          terraform output -json > tf_out.json
          echo "Nodes:"
          jq -r '.nodes.value | to_entries[] | "  \(.key) -> \(.value)"' tf_out.json
          echo "URL:"
          jq -r '.url.value' tf_out.json

          echo "nodes_json=$(jq -c '.nodes.value' tf_out.json)" >> "$GITHUB_OUTPUT"
          echo "url=$(jq -r '.url.value' tf_out.json)"          >> "$GITHUB_OUTPUT"

  ansible:
    needs: terraform
    uses: ./.github/workflows/ansible-deploy.yml
    with:
      nodes_json: ${{ needs.terraform.outputs.nodes_json }}
      ssh_user: ${{ inputs.ssh_user }}
      branch: ${{ inputs.branch }}
    secrets:
      CLOUDLAB_PEM_B64: ${{ secrets.CLOUDLAB_PEM_B64 }}
