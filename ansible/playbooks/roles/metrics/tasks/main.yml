# roles/metrics/tasks/main.yml
# ----------------------------
# Deploy Prometheus + Grafana monitoring stack.

- name: Add Prometheus Community Helm repo
  kubernetes.core.helm_repository:
    name: prometheus-community
    repo_url: https://prometheus-community.github.io/helm-charts

# --- Create Grafana admin secret if not present ---
- name: Ensure monitoring namespace exists
  kubernetes.core.k8s:
    kubeconfig: /etc/kubernetes/admin.conf
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: monitoring

- name: Create Grafana admin credentials secret
  kubernetes.core.k8s:
    kubeconfig: /etc/kubernetes/admin.conf
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: grafana-admin-credentials
        namespace: monitoring
      type: Opaque
      stringData:
        admin-user: admin
        admin-password: "{{ grafana_admin_password | default('admin123') }}"

# --- Deploy Prometheus + Grafana stack ---
- name: Deploy kube-prometheus-stack (no Helm wait; weâ€™ll do targeted waits)
  kubernetes.core.helm:
    name: kube-prometheus-stack
    chart_ref: prometheus-community/kube-prometheus-stack
    release_namespace: monitoring
    kubeconfig: /etc/kubernetes/admin.conf
    create_namespace: true
    values_files:
      - "/users/{{ ansible_user }}/local/repository/helm/metrics/values.yaml"
    atomic: false
    wait: false
    timeout: "900s"

# --- Wait for Prometheus Operator CRDs to exist ---
- name: Wait for CRDs (ServiceMonitor, PodMonitor, Prometheus, Alertmanager, Probe, ThanosRuler)
  vars:
    crds:
      - servicemonitors.monitoring.coreos.com
      - podmonitors.monitoring.coreos.com
      - prometheuses.monitoring.coreos.com
      - alertmanagers.monitoring.coreos.com
      - probes.monitoring.coreos.com
      - thanosrulers.monitoring.coreos.com
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    name: "{{ item }}"
    kubeconfig: /etc/kubernetes/admin.conf
  register: crd_info
  until: crd_info.resources | length > 0
  retries: 60
  delay: 5
  loop: "{{ crds }}"

# --- PVCs usually the slow part; wait for them to Bind ---
- name: Wait for Prometheus PVC to be Bound
  kubernetes.core.k8s_info:
    api_version: v1
    kind: PersistentVolumeClaim
    namespace: monitoring
    name: prometheus-kube-prometheus-stack-prometheus-db-prometheus-kube-prometheus-stack-prometheus-0
    kubeconfig: /etc/kubernetes/admin.conf
  register: prom_pvc
  until: prom_pvc.resources and prom_pvc.resources[0].status.phase == 'Bound'
  retries: 90
  delay: 5

- name: Wait for Alertmanager PVC to be Bound
  kubernetes.core.k8s_info:
    api_version: v1
    kind: PersistentVolumeClaim
    namespace: monitoring
    name: alertmanager-kube-prometheus-stack-alertmanager-db-alertmanager-kube-prometheus-stack-alertmanager-0
    kubeconfig: /etc/kubernetes/admin.conf
  register: am_pvc
  until: am_pvc.resources and am_pvc.resources[0].status.phase == 'Bound'
  retries: 90
  delay: 5

# --- Rollout waits: operator, grafana, ksm, node-exporter, prometheus, alertmanager ---

- name: Wait for operator rollout
  ansible.builtin.command: >
    kubectl --kubeconfig=/etc/kubernetes/admin.conf
    -n monitoring rollout status deploy/kube-prometheus-stack-operator --timeout=600s
  changed_when: false

- name: Wait for kube-state-metrics rollout
  ansible.builtin.command: >
    kubectl --kubeconfig=/etc/kubernetes/admin.conf
    -n monitoring rollout status deploy/kube-prometheus-stack-kube-state-metrics --timeout=600s
  changed_when: false

- name: Wait for Grafana rollout
  ansible.builtin.command: >
    kubectl --kubeconfig=/etc/kubernetes/admin.conf
    -n monitoring rollout status deploy/kube-prometheus-stack-grafana --timeout=600s
  changed_when: false

- name: Wait for node-exporter DaemonSet availability
  ansible.builtin.command: >
    kubectl --kubeconfig=/etc/kubernetes/admin.conf
    -n monitoring rollout status ds/kube-prometheus-stack-prometheus-node-exporter --timeout=600s
  changed_when: false

- name: Wait for Prometheus StatefulSet ready
  ansible.builtin.command: >
    kubectl --kubeconfig=/etc/kubernetes/admin.conf
    -n monitoring rollout status sts/prometheus-kube-prometheus-stack-prometheus --timeout=900s
  changed_when: false

- name: Wait for Alertmanager StatefulSet ready
  ansible.builtin.command: >
    kubectl --kubeconfig=/etc/kubernetes/admin.conf
    -n monitoring rollout status sts/alertmanager-kube-prometheus-stack-alertmanager --timeout=900s
  changed_when: false
