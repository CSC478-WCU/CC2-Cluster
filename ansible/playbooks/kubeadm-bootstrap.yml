# ----------------------------
# Clone cluster Helm repo
# ----------------------------
- name: Clone cluster Helm repo
  hosts: kubeadmin
  become: yes
  tasks:
    - name: Ensure repo parent exists
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}/local"
        state: directory
        owner: "{{ ansible_user }}"
        mode: '0755'

    - name: Clone repo
      ansible.builtin.git:
        repo: "https://github.com/csc478-wcu/cc2-cluster.git"
        dest: "/home/{{ ansible_user }}/local/repository"
        version: main
        force: yes

# ----------------------------
# Initialize control-plane node
# ----------------------------
- name: Initialize control plane (kubeadmin)
  hosts: kubeadmin
  become: yes
  tasks:
    - name: Sanity check CRI (containerd)
      ansible.builtin.command: crictl info
      register: crictl_info
      changed_when: false

    - name: kubeadm init (containerd, flannel CIDR)
      ansible.builtin.command: >
        kubeadm init
        --pod-network-cidr=10.244.0.0/16
        --cri-socket=unix:///var/run/containerd/containerd.sock
      args:
        creates: /etc/kubernetes/admin.conf
      register: kubeadm_init

    - name: Create .kube directory for SSH user
      ansible.builtin.file:
        path: /home/{{ ansible_user }}/.kube
        state: directory
        owner: "{{ ansible_user }}"
        mode: '0755'

    - name: Copy admin.conf to user kube config
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/{{ ansible_user }}/.kube/config
        remote_src: yes
        owner: "{{ ansible_user }}"
        mode: '0644'

    - name: Extract join command
      ansible.builtin.shell: kubeadm token create --print-join-command
      register: join_command

    - name: Save join command for workers
      ansible.builtin.set_fact:
        worker_join_cmd: "{{ join_command.stdout }}"
      delegate_to: localhost

    - ansible.builtin.debug:
        msg: "Worker join command is {{ join_command.stdout }}"

    # ----------------------------
    # Install Flannel CNI (use admin.conf directly)
    # ----------------------------
    - name: Install Flannel CNI
      kubernetes.core.k8s:
        state: present
        src: https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
        kubeconfig: /etc/kubernetes/admin.conf

    - name: Wait for flannel to roll out
      ansible.builtin.command: >
        kubectl --kubeconfig=/etc/kubernetes/admin.conf
        -n kube-flannel rollout status ds/kube-flannel-ds --timeout=180s
      changed_when: false
      failed_when: false

# ----------------------------
# Join worker nodes
# ----------------------------
- name: Join workers to cluster
  hosts: workers
  become: yes
  tasks:
    - name: Join the cluster
      ansible.builtin.command: "{{ hostvars['localhost'].worker_join_cmd }}"
      args:
        creates: /etc/kubernetes/kubelet.conf
