# ----------------------------
# Clone cluster Helm repo
# ----------------------------
- name: Clone cluster Helm repo
  hosts: kubeadmin
  become: yes
  tasks:
    - name: Clone repo
      git:
        repo: "https://github.com/csc478-wcu/cc2-cluster.git"
        dest: "/home/{{ ansible_user }}/local/repository"
        version: main

# ----------------------------
# Install Kubernetes components
# ----------------------------
- name: Install Kubernetes components on all nodes
  hosts: all
  become: yes
  tasks:
    - name: Add Kubernetes apt key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes apt repository
      apt_repository:
        repo: "deb https://apt.kubernetes.io/ kubernetes-xenial main"
        state: present
        filename: kubernetes

    - name: Install kubeadm, kubelet, kubectl
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes

    - name: Hold kube packages at current version
      command: apt-mark hold kubelet kubeadm kubectl

# ----------------------------
# Initialize control-plane node
# ----------------------------
- name: Initialize control plane (kubeadmin)
  hosts: kubeadmin
  become: yes
  tasks:
    - name: Run kubeadm init
      command: kubeadm init --pod-network-cidr=10.244.0.0/16
      args:
        creates: /etc/kubernetes/admin.conf
      register: kubeadm_init

    - name: Create .kube directory
      file:
        path: /home/{{ ansible_user }}/.kube
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0755

    - name: Copy admin.conf to user kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/{{ ansible_user }}/.kube/config
        remote_src: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0644

    - name: Extract join command
      shell: kubeadm token create --print-join-command
      register: join_command

    - name: Save join command for workers
      set_fact:
        worker_join_cmd: "{{ join_command.stdout }}"
      delegate_to: localhost

    - debug:
        msg: "Worker join command is {{ join_command.stdout }}"

    # ----------------------------
    # Install Flannel CNI
    # ----------------------------
    - name: Install Flannel CNI
      kubernetes.core.k8s:
        state: present
        src: https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml

# ----------------------------
# Join worker nodes
# ----------------------------
- name: Join workers to cluster
  hosts: workers
  become: yes
  tasks:
    - name: Run kubeadm join
      command: "{{ hostvars['localhost'].worker_join_cmd }}"
      args:
        creates: /etc/kubernetes/kubelet.conf
